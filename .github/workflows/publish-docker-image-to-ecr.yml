name: Deploy to Amazon ECS

on:
  push:
    tags: 
      - '*.*.*'

env:
  AWS_REGION: eu-north-1                   # set this to your preferred AWS region, e.g. us-west-1
  ECR_REPOSITORY: mycbrbot           # set this to your Amazon ECR repository name
  ECS_SERVICE: MyCbrBot                 # set this to your Amazon ECS service name
  ECS_CLUSTER: nazarovsa-fargate-cluster                # set this to your Amazon ECS cluster name

jobs:
  deploy:
    name: Deploy
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@13d241b293754004c80624b5567555c4a39ffbe3
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@aaf69d68aa3fb14c1d5a6be9ac61fe15b48453a2

      - name: Build, tag, and push image to Amazon ECR
        id: build-image
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        run: |
          # Build a docker container and
          # push it to ECR so that it can
          # be deployed to ECS.
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:latest -t $ECR_REGISTRY/$ECR_REPOSITORY:${GITHUB_REF##*/} . --file MyCbrBot.Host/Dockerfile
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:${GITHUB_REF##*/} 
          echo "::set-output name=image::$ECR_REGISTRY/$ECR_REPOSITORY:${GITHUB_REF##*/}"
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:latest
          echo "::set-output name=image::$ECR_REGISTRY/$ECR_REPOSITORY:latest"
